<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.parkyangji.openmarket.backend.common.CommonSqlMapper">
  <!-- 카테고리 -->
  <select id="selectAllCategory" resultType="com.parkyangji.openmarket.backend.dto.ProductCategoryDto"> 
    SELECT * FROM product_category;
  </select>
  <select id="selectCategoryName" resultType="String">
    select category_name from product_category where category_id = #{category_id};
  </select>
  <select id="selectCategory" resultType="map">
    SELECT 
        child.category_id AS category_id, 
        child.parent_id as parent_id,
        child.category_name AS category_name
    FROM 
        product_category child
    WHERE 
        child.category_id = #{category_id}
    UNION ALL
    SELECT 
        parent.category_id AS category_id, 
        parent.parent_id as parent_id,
        parent.category_name AS category_name
    FROM 
        product_category child
    LEFT JOIN 
        product_category parent
    ON 
        child.parent_id = parent.category_id
    WHERE 
        child.category_id = #{category_id};
  </select>

  <select id="selectSubCategorys" parameterType="integer" resultType="map">
      SELECT category_name, category_id 
      FROM product_category pc 
      WHERE 
      <if test="parent_id != null">
          pc.parent_id = #{parent_id}
      </if>
      <if test="parent_id == null">
          pc.parent_id IS NULL
      </if>
  </select>

  <!-- product_id -->
  <select id="selectProductDto" resultType="com.parkyangji.openmarket.backend.dto.ProductDto">
    SELECT * FROM product WHERE product_id = #{product_id}
  </select>
  <select id="selectProductAllImages" resultType="map">
    SELECT it.type_name , pi2.image_url 
    FROM product_image pi2
    LEFT JOIN image_type it 
    ON it.image_type_id = pi2.image_type_id 
    LEFT JOIN product p
    ON pi2.product_id = p.product_id
    WHERE p.product_id = #{product_id}
    ;
  </select>
  <select id="selectThumbnailImage" resultType="String">
    SELECT pi2.image_url 
    FROM product_image pi2
    LEFT JOIN image_type it 
    ON it.image_type_id = pi2.image_type_id 
    LEFT JOIN product p
    ON pi2.product_id = p.product_id
    WHERE p.product_id = #{product_id} and it.type_name = 'thumbnail'
    LIMIT 1
    ;
  </select>
  <select id="selectAllkeywords" resultType="com.parkyangji.openmarket.backend.dto.KeywordDto">
    SELECT * FROM keyword;
  </select>
  <select id="selectProductKeywords" resultType="String">
    SELECT k.keyword_name 
    FROM product_keyword_value pkv 
    join keyword k 
    on pkv.keyword_id = k.keyword_id 
    WHERE pkv.product_id = #{product_id};
  </select>
    <select id="selectProductOptionAndInventory" resultType="com.parkyangji.openmarket.backend.dto.ProductOptionReturnDto">
    SELECT cv.combination_id, cv.combination_value_id 
    ,ov.optionvalue , po.optionvalue as optionname , poi.quantity 
    , poi.price as origin_price,
    IF(ssi.discount_rate IS NOT NULL, ssi.discount_rate , NULL ) as discount_rate,
    IF(ssi.discount_rate IS NOT NULL, poi.price * (100 - ssi.discount_rate) / 100, NULL) as sale_price
    FROM product_combination_value cv
    join product_option_value ov
    on cv.option_value_id = ov.option_value_id
    join product_option_inventory poi
    on cv.combination_id = poi.combination_id 
    join product_option po 
    on po.option_id = ov.option_id 
    LEFT JOIN seller_sale_item ssi 
    ON po.product_id = ssi.product_id
    where po.product_id = #{product_id}
    order by cv.combination_id, po.optionvalue 
    ;
  </select>
  <select id="selectProductById" resultType="com.parkyangji.openmarket.backend.dto.ProductDetailReturnDto">
    SELECT p.product_id, s.store_name, p.category_id, p.title,
          MIN(poi.price) as rep_price, -- 최소 가격
          IF(ssi.discount_rate IS NOT NULL, ssi.discount_rate , NULL ) as discount_rate,
          IF(ssi.discount_rate IS NOT NULL, FLOOR(MIN(poi.price) * (100 - ssi.discount_rate) / 100), NULL) as rep_sale_price
    FROM product p
    JOIN seller s ON p.seller_id = s.seller_id
    JOIN product_option_combination poc 
    ON p.product_id = poc.product_id
    JOIN product_option_inventory poi 
    ON poc.combination_id = poi.combination_id
    LEFT JOIN seller_sale_item ssi 
    ON poc.product_id = ssi.product_id
    WHERE p.product_id = #{product_id}
    GROUP BY p.product_id 
    ;
  </select>

  <!-- 상품 평점/리뷰 답글 -->
  <select id="selectReviewByProductId" resultType="com.parkyangji.openmarket.backend.dto.ProductReviewDto">
    SELECT pr.order_review_id , pr.order_detail_id , pr.review_content , pr.created_date 
    FROM order_detail od 
    LEFT JOIN `order` o 
    ON od.order_id = o.order_id 
    JOIN product_option_combination poc
    ON od.combination_id = poc.combination_id 
    JOIN product p
    ON p.product_id = poc.product_id 
    JOIN product_review pr 
    ON pr.order_detail_id = od.order_detail_id 
    WHERE p.product_id = #{product_id}
    ;
  </select>
  <select id="selectRatingByProductId" resultType="com.parkyangji.openmarket.backend.dto.ProductRatingDto">
    SELECT pr.rating_id , pr.order_detail_id , pr.rating , pr.created_date 
    FROM order_detail od 
    LEFT JOIN `order` o 
    ON od.order_id = o.order_id 
    JOIN product_option_combination poc
    ON od.combination_id = poc.combination_id 
    JOIN product p
    ON p.product_id = poc.product_id 
    JOIN product_rating pr 
    ON pr.order_detail_id = od.order_detail_id 
    WHERE p.product_id = #{product_id}
    ;
  </select>
  <select id="selectReviewReplyByOrderReviewId" resultType="com.parkyangji.openmarket.backend.dto.ReviewSellerReplyDto">
    SELECT rsr.order_review_id ,rsr.seller_reply , rsr.created_date 
    FROM product_review pr 
    LEFT JOIN review_seller_reply rsr 
    ON pr.order_review_id = rsr.order_review_id 
    WHERE rsr.order_review_id = #{order_review_id}
    ;
  </select>
  <select id="selectReviewerByOrderDetailId" resultType="String">
    SELECT c.nickname 
    FROM order_detail od 
    LEFT JOIN `order` o 
    ON od.order_id = o.order_id
    JOIN customer c 
    ON o.customer_id = c.customer_id 
    WHERE od.order_detail_id = #{order_detail_id}
    ;
  </select>

</mapper>
